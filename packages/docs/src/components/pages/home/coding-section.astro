---
const paragraphs: string[] = [
  "Flitter: Where declarative code meets 'I declare this app awesome!'",
  "Box model layouts so easy, even your cat could do it (if it had opposable thumbs).",
  "SVG or Canvas? Why not both? Flitter's like a graphic Swiss Army knife!",
  "Adding interactions to charts is now easier than adding toppings to pizza.",
  "Flitter makes handling Canvas events feel like a walk in the park (minus the pigeons).",
  "Who needs D3 when Flitter's got your back? It's like having a math genius for a best friend.",
  "SVG support smoother than a fresh jar of skippy. Perfect for those 'view source' moments!",
  "Canvas performance so fast, it might break the space-time continuum (results may vary).",
  "Rendering efficiency that would make even The Flash jealous.",
  "Our widget library is like a box of chocolates, but you always know what you're gonna get: awesome charts!",
];
---

<section
  id="coding-section"
  class="flex w-full shrink-0 flex-col-reverse md:flex-row"
>
  <div
    class="padding-x w-full text-[32px] font-bold leading-[1.1] md:text-[64px]"
  >
    {
      paragraphs.map((paragraph) => (
        <p class="flex h-screen items-center align-middle">{paragraph}</p>
      ))
    }
  </div>
  <div
    class="sticky top-0 flex h-[65vh] w-full items-center justify-center bg-gray-600 md:h-screen"
  >
    <div
      class="h-full overflow-hidden py-4 md:h-[90%] md:py-0"
      id="coding-lottie"
    >
    </div>
  </div>
</section>

<script>
  import lottie from "lottie-web";
  import gsap from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  const coding = document.getElementById("coding-lottie")!;

  const animation = lottie.loadAnimation({
    container: coding,
    renderer: "canvas",
    loop: false,
    autoplay: false,
    path: "/home/coding.json",
  });

  const playhead = { frame: 0 };
  animation.addEventListener("data_ready", () => {
    console.log(animation.totalFrames);
    gsap.to(playhead, {
      scrollTrigger: {
        trigger: "#coding-section",
        start: "top top",
        end: "bottom bottom",
        scrub: 1,
      },
      frame: animation.totalFrames - 1,
      ease: "none",
      onUpdate: () => animation.goToAndStop(playhead.frame, true),
    });
  });
</script>

<style>
  .padding-x {
    padding-inline: var(--px);
  }
</style>
