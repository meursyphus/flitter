---
import SandPack from "./SandPack.tsx";
import Layout from "../../layouts/TutorialLayout.astro";
import { getCollection } from "astro:content";

export const getStaticPaths = async () => {
  const tutorialEntries = await getCollection("tutorial");
  function resolveSlug(slug: string) {
    return slug.replace(/^\d+_/, "");
  }

  return tutorialEntries
    .map((entry) => ({ ...entry, slug: resolveSlug(entry.slug) }))
    .map((entry, i, arr) => ({
      params: {
        slug: entry.slug,
      },
      props: {
        prev: arr[i - 1],
        next: arr[i + 1],
        entry,
      },
    }));
};

const { entry, prev, next } = Astro.props;
const { Content } = await entry.render();
const [prevSlug, nextSlug] = [prev && prev.slug, next && next.slug];
---

<Layout title="Tutorial">
  <div class="grid grid-cols-[3fr_4fr]">
    <div class="w-full shrink-0">
      <nav class="flex justify-between sticky top-0 bg-white">
        {
          prev ? (
            <a class="nav-button" href={prevSlug}>
              Prev
            </a>
          ) : (
            <div class="nav-button opacity-50">Prev</div>
          )
        }
        <div
          class="mx-1 border border-black w-full h-[60px] flex items-center justify-center"
        >
          Table of Content
        </div>
        {
          next ? (
            <a class="nav-button" href={nextSlug}>
              Next
            </a>
          ) : (
            <div class="nav-button opacity-50">Next</div>
          )
        }
      </nav>
      <div class="prose prose-sm !max-w-full p-2 shrink-0">
        <Content />
      </div>
    </div>
    <div class="sticky-screen">
      <SandPack files={entry.data.files} client:only="react" />
    </div>
  </div>
</Layout>

<style>
  .sticky-screen {
    position: sticky;
    top: 0;
    height: calc(100vh - var(--header));
  }

  .nav-button {
    border: 1px solid black;
    padding: 1rem;
  }
</style>
