var W=Object.defineProperty;var $=(s,i,t)=>i in s?W(s,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[i]=t;var a=(s,i,t)=>($(s,typeof i!="symbol"?i+"":i,t),t);import{Z as I,_ as x,$ as P,a0 as S,G as d,a1 as A,E as T,B as v,P as u,R as U,O as M,k as D,a2 as F}from"./Widget-Dxvrat1N.js";import{g as L}from"./_commonjsHelpers-Cpj98o6Y.js";var j={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};const O=L(j);var C={red:0,orange:60,yellow:120,green:180,blue:240,purple:300};function _(s){var w,B;var i,t=[],r=1,e;if(typeof s=="number")return{space:"rgb",values:[s>>>16,(s&65280)>>>8,s&255],alpha:1};if(typeof s=="number")return{space:"rgb",values:[s>>>16,(s&65280)>>>8,s&255],alpha:1};if(s=String(s).toLowerCase(),O[s])t=O[s].slice(),e="rgb";else if(s==="transparent")r=0,e="rgb",t=[0,0,0];else if(s[0]==="#"){var o=s.slice(1),n=o.length,p=n<=4;r=1,p?(t=[parseInt(o[0]+o[0],16),parseInt(o[1]+o[1],16),parseInt(o[2]+o[2],16)],n===4&&(r=parseInt(o[3]+o[3],16)/255)):(t=[parseInt(o[0]+o[1],16),parseInt(o[2]+o[3],16),parseInt(o[4]+o[5],16)],n===8&&(r=parseInt(o[6]+o[7],16)/255)),t[0]||(t[0]=0),t[1]||(t[1]=0),t[2]||(t[2]=0),e="rgb"}else if(i=/^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\s*\(([^\)]*)\)/.exec(s)){var k=i[1];e=k.replace(/a$/,"");var y=e==="cmyk"?4:e==="gray"?1:3;t=i[2].trim().split(/\s*[,\/]\s*|\s+/),e==="color"&&(e=t.shift()),t=t.map(function(l,b){if(l[l.length-1]==="%")return l=parseFloat(l)/100,b===3?l:e==="rgb"?l*255:e[0]==="h"||e[0]==="l"&&!b?l*100:e==="lab"?l*125:e==="lch"?b<2?l*150:l*360:e[0]==="o"&&!b?l:e==="oklab"?l*.4:e==="oklch"?b<2?l*.4:l*360:l;if(e[b]==="h"||b===2&&e[e.length-1]==="h"){if(C[l]!==void 0)return C[l];if(l.endsWith("deg"))return parseFloat(l);if(l.endsWith("turn"))return parseFloat(l)*360;if(l.endsWith("grad"))return parseFloat(l)*360/400;if(l.endsWith("rad"))return parseFloat(l)*180/Math.PI}return l==="none"?0:parseFloat(l)}),r=t.length>y?t.pop():1}else/[0-9](?:\s|\/|,)/.test(s)&&(t=s.match(/([0-9]+)/g).map(function(l){return parseFloat(l)}),e=((B=(w=s.match(/([a-z])/ig))==null?void 0:w.join(""))==null?void 0:B.toLowerCase())||"rgb");return{space:e,values:t,alpha:r}}function z(s){Array.isArray(s)&&s.raw&&(s=String.raw(...arguments)),s instanceof Number&&(s=+s);var i,t=_(s);if(!t.space)return[];const r=t.space[0]==="h"?I.min:x.min,e=t.space[0]==="h"?I.max:x.max;return i=Array(3),i[0]=Math.min(Math.max(t.values[0],r[0]),e[0]),i[1]=Math.min(Math.max(t.values[1],r[1]),e[1]),i[2]=Math.min(Math.max(t.values[2],r[2]),e[2]),t.space[0]==="h"&&(i=I.rgb(i)),i.push(Math.min(Math.max(t.alpha,0),1)),i}class m extends P{constructor({r:t,g:r,b:e,a:o}){super();a(this,"r");a(this,"g");a(this,"b");a(this,"a");this.r=t,this.g=r,this.b=e,this.a=o}static of(t){const[r,e,o,n]=z(t);return new m({r,g:e,b:o,a:n})}get value(){return`rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`}multiply(t){return new m({r:this.r*t,g:this.g*t,b:this.b*t,a:this.a*t})}plus(t){return new m({r:this.r+t.r,g:this.g+t.g,b:this.b+t.b,a:this.a+t.a})}equals(t){return this===t?!0:this.r===t.r&&this.g===t.g&&this.b===t.b&&this.a===t.a}}const g=class g extends S{constructor({style:t="solid",width:r=1,color:e="black",strokeAlign:o=g.strokeAlignInside}={}){super();a(this,"color");a(this,"width");a(this,"style");a(this,"strokeAlign");this.color=typeof e=="string"?m.of(e):e,this.style=t,this.width=r,d(o>=-1&&o<=1,"strokeAlign must be between -1 and 1"),this.strokeAlign=o}static lerp(t,r,e){return new g({style:e<.5?t.style:r.style,color:A.lerp(t.color,r.color,e),width:A.lerp(t.width,r.width,e),strokeAlign:A.lerp(t.strokeAlign,r.strokeAlign,e)})}equal(t){return this.equals(t)}equals(t){return this===t?!0:this.color===t.color&&this.width===t.width&&this.style===t.style&&this.strokeAlign===t.strokeAlign}static get none(){return new g({width:0,style:"none"})}get strokeInset(){return this.width*(1-(1+this.strokeAlign)/2)}get strokeOutset(){return this.width*(1+this.strokeAlign)/2}get strokeOffset(){return this.width*this.strokeAlign}paint(t){this.style==="none"?(t.setAttribute("stroke-width","0"),t.setAttribute("stroke","transparent")):(t.setAttribute("stroke-width",`${this.width}`),t.setAttribute("stroke",`${this.color.value}`)),t.setAttribute("fill","none")}};a(g,"strokeAlignInside",-1),a(g,"strokeAlignCenter",0),a(g,"strokeAlignOutside",1);let h=g;class R extends S{get dimensions(){throw new Error("dimensions is not implemented.")}getInnerPath(i){return new u().addRect(this.dimensions.deflateRect(i))}getOuterPath(i){return new u().addRect(i)}paint(i,t){throw new Error("paint is not implemented.")}equal(i){throw new Error("equal is not implemented.")}static paintUniformBorderWidthRadius(i,{side:t,borderRadius:r,rect:e}){d(t.style!=="none");const o=i.top;o.setAttribute("stroke-width","0"),o.setAttribute("fill",t.color.value);const n=r.toRRect(e),p=n.deflate(t.strokeInset),k=n.inflate(t.strokeOutset);o.setAttribute("d",new u().addDRRect({inner:p,outer:k}).getD()),["bottom"].forEach(y=>{const w=i[y];h.none.paint(w)})}static paintUniformBorderWidthCircle(i,{side:t,rect:r}){d(t.style!=="none");const e=i.top;t.paint(e),e.setAttribute("d",new u().addOval(U.fromCircle({center:r.center,radius:(r.shortestSide+t.strokeOffset)/2})).getD()),["bottom"].forEach(o=>{const n=i[o];h.none.paint(n)})}static paintUniformBorderWidthRectangle(i,{side:t,rect:r}){d(t.style!=="none");const e=i.top;t.paint(e),e.setAttribute("d",new u().addRect(r.inflate(t.strokeOffset/2)).getD()),["bottom"].forEach(o=>{const n=i[o];h.none.paint(n)})}}class f extends R{constructor({top:t=h.none,right:r=h.none,bottom:e=h.none,left:o=h.none}){super();a(this,"top");a(this,"right");a(this,"bottom");a(this,"left");this.top=t,this.right=r,this.bottom=e,this.left=o}static lerp(t,r,e){return d(e>=0&&e<=1),new f({top:h.lerp(t.top,r.top,e),left:h.lerp(t.left,r.left,e),bottom:h.lerp(t.bottom,r.bottom,e),right:h.lerp(t.right,r.right,e)})}equals(t){return this===t?!0:t instanceof f?this.top.equals(t.top)&&this.right.equals(t.right)&&this.bottom.equals(t.bottom)&&this.left.equals(t.left):!1}equal(t){return this.equals(t)}static fromBorderSide(t){return new f({left:t,right:t,bottom:t,top:t})}static symmetric({vertical:t=h.none,horizontal:r=h.none}){return new f({left:t,right:t,top:r,bottom:r})}static all({color:t="black",width:r=1,style:e="solid",strokeAlign:o=h.strokeAlignInside}={}){const n=new h({strokeAlign:o,style:e,color:t,width:r});return f.fromBorderSide(n)}get dimensions(){return this._widthIsUniform?T.all(this.top.strokeInset):T.fromLTRB({left:this.left.strokeInset,right:this.right.strokeInset,bottom:this.bottom.strokeInset,top:this.top.strokeInset})}get isUniform(){return this._colorIsUniform&&this._styleIsUniform&&this._strokeAlignIsUniform&&this._widthIsUniform}paint(t,{rect:r,borderRadius:e,shape:o="rectangle"}){if(this.isUniform)switch(this.top.style){case"none":Object.values(t).forEach(n=>{n.setAttribute("stroke-width","0"),n.setAttribute("fill","none"),n.setAttribute("d","")});return;case"solid":switch(o){case"circle":d(e==null,"A borderRadius can only be given for rectangular boxes."),R.paintUniformBorderWidthCircle(t,{side:this.top,rect:r});break;case"rectangle":if(e!=null&&e!=v.zero){R.paintUniformBorderWidthRadius(t,{side:this.top,borderRadius:e,rect:r});return}R.paintUniformBorderWidthRectangle(t,{side:this.top,rect:r});break}return}d((()=>{if(e!=null){const n=`
          A borderRadius can only be given for a uniform Border.
          The following is not uniform: `;if(!this._colorIsUniform)throw new Error(n+"BorderSide.color");if(!this._widthIsUniform)throw new Error(n+"BorderSide.width");if(!this._styleIsUniform)throw new Error(n+"BorderSide.style");if(!this._strokeAlignIsUniform)throw new Error(n+"BorderSide.strokeAlign")}return!0})()),d((()=>{if(o!="rectangle"){const n=`
          A Border can only be drawn as a circle if it is uniform.
          The following is not uniform: `;if(!this._colorIsUniform)throw new Error(n+"BorderSide.color");if(!this._widthIsUniform)throw new Error(n+"BorderSide.width");if(!this._styleIsUniform)throw new Error(n+"BorderSide.style");if(!this._strokeAlignIsUniform)throw new Error(n+"BorderSide.strokeAlign")}return!0})()),d((()=>{if(!this._strokeAlignIsUniform&&this.top.strokeAlign!==h.strokeAlignInside)throw new Error("A Border can only have different strokeAlign when BorderSide.strokeAlignInside is used on uniform borders.");return!0})()),this.paintBorder(t,{rect:r})}paintBorder(t,{rect:r}){switch(t.bottom.setAttribute("stroke-width","0"),t.top.setAttribute("stroke-width","0"),t.left.setAttribute("stroke-width","0"),t.right.setAttribute("stroke-width","0"),this.top.style){case"solid":t.top.setAttribute("fill",this.top.color.value);const e=new u;e.moveTo({x:r.left,y:r.top}),e.lineTo({x:r.right,y:r.top}),this.top.width===0?(t.top.setAttribute("fill","none"),t.top.setAttribute("stroke","none")):(e.lineTo({x:r.right-this.right.width,y:r.top+this.top.width}),e.lineTo({x:r.left+this.left.width,y:r.top+this.top.width})),e.close(),t.top.setAttribute("d",e.getD());break;case"none":t.top.setAttribute("d","");break}switch(this.right.style){case"solid":t.right.setAttribute("fill",this.right.color.value);const e=new u;e.moveTo({x:r.right,y:r.top}),e.lineTo({x:r.right,y:r.bottom}),this.right.width===0?(t.right.setAttribute("fill","none"),t.right.setAttribute("stroke","none")):(e.lineTo({x:r.right-this.right.width,y:r.bottom-this.bottom.width}),e.lineTo({x:r.right-this.right.width,y:r.top+this.top.width})),e.close(),t.right.setAttribute("d",e.getD());break;case"none":t.right.setAttribute("d","");break}switch(this.bottom.style){case"solid":t.bottom.setAttribute("fill",this.bottom.color.value);const e=new u;e.moveTo({x:r.right,y:r.bottom}),e.lineTo({x:r.left,y:r.bottom}),this.bottom.width===0?(t.bottom.setAttribute("fill","none"),t.bottom.setAttribute("stroke","none")):(e.lineTo({x:r.left+this.left.width,y:r.bottom-this.bottom.width}),e.lineTo({x:r.right-this.right.width,y:r.bottom-this.bottom.width})),e.close(),t.bottom.setAttribute("d",e.getD());break;case"none":t.bottom.setAttribute("d","");break}switch(this.left.style){case"solid":t.left.setAttribute("fill",this.left.color.value);const e=new u;e.moveTo({x:r.left,y:r.bottom}),e.lineTo({x:r.left,y:r.top}),this.left.width===0?(t.left.setAttribute("fill","none"),t.left.setAttribute("stroke","none")):(e.lineTo({x:r.left+this.left.width,y:r.top+this.top.width}),e.lineTo({x:r.left+this.left.width,y:r.bottom-this.bottom.width})),e.close(),t.left.setAttribute("d",e.getD());break;case"none":t.left.setAttribute("d","");break}}get _colorIsUniform(){const t=this.top.color;return this.right.color.equals(t)&&this.bottom.color.equals(t)&&this.left.color.equals(t)}get _widthIsUniform(){const t=this.top.width;return this.right.width===t&&this.bottom.width===t&&this.left.width===t}get _styleIsUniform(){const t=this.top.style;return this.right.style==t&&this.bottom.style==t&&this.left.style==t}get _strokeAlignIsUniform(){const t=this.top.strokeAlign;return this.right.strokeAlign==t&&this.bottom.strokeAlign==t&&this.left.strokeAlign==t}}class c extends P{constructor({color:t="black",offset:r={x:0,y:0},blurRadius:e=0}={}){super();a(this,"color");a(this,"offset");a(this,"blurRadius");this.color=typeof t=="string"?m.of(t):t,this.offset=new M({x:r.x,y:r.y}),this.blurRadius=e}static equals(t,r){if(t.length!==r.length)return!1;for(let e=0;e<t.length;e++)if(!t[e].equals(r[e]))return!1;return!0}static lerp(t,r,e){const o=t.length-r.length;let n=t,p=r;return o<0?n=[...t,...Array.from({length:-o},()=>new c)]:p=[...r,...Array.from({length:o},()=>new c)],n.map((k,y)=>{const w=p[y];return A.lerp(k,w,e)})}plus(t){return new c({color:this.color.plus(t.color),offset:this.offset.plus(t.offset),blurRadius:this.blurRadius+t.blurRadius})}multiply(t){return new c({color:this.color.multiply(t),offset:this.offset.multiply(t),blurRadius:this.blurRadius*t})}equals(t){return this===t?!0:this.color===t.color&&this.offset.equals(t.offset)&&this.blurRadius===t.blurRadius}eqaul(t){return this.equals(t)}}class q extends S{constructor({color:t="transparent",border:r,borderRadius:e,shape:o="rectangle",boxShadow:n}){super();a(this,"color");a(this,"border");a(this,"borderRadius");a(this,"boxShadow");a(this,"shape");this.color=typeof t=="string"?m.of(t):t,this.border=r,this.borderRadius=e,this.shape=o,this.boxShadow=n}static lerp(t,r,e){return d(e>=0&&e<=1,"t must be between 0 and 1"),new q({color:A.lerp(t.color,r.color,e),border:f.lerp(t.border??f.fromBorderSide(h.none),r.border??f.fromBorderSide(h.none),e),borderRadius:v.lerp(t.borderRadius??v.all(D.zero),r.borderRadius??v.all(D.zero),e),boxShadow:c.lerp(t.boxShadow??[],r.boxShadow??[],e),shape:e<.5?t.shape:r.shape})}equals(t){return this===t?!0:!(!(t instanceof q)||!(this.color==null&&t.color==null)&&(!(this.color!=null&&t.color!=null)||!this.color.equals(t.color))||!(this.border==null&&t.border==null)&&(!(this.border!=null&&t.border!=null)||!this.border.equals(t.border))||!(this.borderRadius==null&&t.borderRadius==null)&&(!(this.borderRadius!=null&&t.borderRadius!=null)||!this.borderRadius.equal(t.borderRadius))||!(this.boxShadow==null&&t.boxShadow==null)&&(!(this.boxShadow!=null&&t.boxShadow!=null)||!c.equals(this.boxShadow,t.boxShadow))||this.shape!==t.shape)}equal(t){return this.equals(t)}get padding(){var t;return(t=this.border)==null?void 0:t.dimensions}getClipPath(t){switch(this.shape){case"circle":const r=t.center,e=t.shortestSide/2,o=U.fromCircle({center:r,radius:e});return new u().addOval(o);case"rectangle":return this.borderRadius!=null?new u().addRRect(this.borderRadius.toRRect(t)):new u().addRect(t)}}createBoxPainter(){return new H(this)}}class H{constructor(i){this.decoration=i}paint(i,t){var e;const r=U.fromLTWH({left:0,top:0,width:t.width,height:t.height});this.paintBackgroundColor(i.box,r),this.paintShadows(i.box),(e=this.decoration.border)==null||e.paint({top:i.topBorder,bottom:i.bottomBorder,left:i.leftBorder,right:i.rightBorder},{rect:r,shape:this.decoration.shape,borderRadius:this.decoration.borderRadius})}paintShadows(i){if(this.decoration.boxShadow==null||this.decoration.boxShadow.length===0){i.removeAttribute("filter");return}const t=this.decoration.boxShadow.reduce((r,e)=>r+` drop-shadow(${e.offset.x} ${e.offset.y} ${e.blurRadius} ${e.color.value})`,"");i.setAttribute("filter",t)}paintBackgroundColor(i,t){if(i.setAttribute("stroke-width","0"),i.setAttribute("fill",this.decoration.color.value||"none"),this.decoration.shape=="circle"){i.setAttribute("d",new u().addOval(t).getD());return}if(this.decoration.borderRadius==null){i.setAttribute("d",new u().addRect(t).getD());return}i.setAttribute("d",new u().addRRect(F.fromRectAndCorners({rect:t,topLeft:this.decoration.borderRadius.topLeft,topRight:this.decoration.borderRadius.topRight,bottomLeft:this.decoration.borderRadius.bottomLeft,bottomRight:this.decoration.borderRadius.bottomRight})).getD())}}export{q as B,f as a,h as b,c};
